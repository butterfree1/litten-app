// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test for the "UISwitch" component renders correctly with description 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#c4c4c4",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginTop": 12,
        "paddingBottom": 12,
        "paddingLeft": 8,
        "paddingRight": 8,
        "paddingTop": 12,
      }
    }
  >
    <Text
      numberOfLines={1}
      style={
        Object {
          "color": "#000000",
          "flex": 1,
          "fontSize": 16,
          "fontWeight": "400",
        }
      }
    >
      Some text here
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 14,
            "fontWeight": "200",
          },
          undefined,
          undefined,
          undefined,
          undefined,
        ]
      }
    >
      One
    </Text>
  </View>,
  <Text
    style={
      Array [
        Array [
          Object {
            "color": "#000000",
            "fontSize": 14,
            "fontWeight": "200",
          },
          Object {
            "marginTop": 8,
          },
        ],
        undefined,
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    Some more text here
  </Text>,
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    supportedOrientations={
      Array [
        "portrait",
      ]
    }
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#d0d4da",
          "height": 215,
          "justifyContent": "center",
        }
      }
    >
      <View>
        <RNCPicker
          items={
            Array [
              Object {
                "label": "One",
                "testID": undefined,
                "textColor": undefined,
                "value": "one",
              },
              Object {
                "label": "Two",
                "testID": undefined,
                "textColor": undefined,
                "value": "two",
              },
            ]
          }
          onChange={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </Modal>,
]
`;

exports[`Snapshot test for the "UISwitch" component renders correctly without description 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#c4c4c4",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginTop": 12,
        "paddingBottom": 12,
        "paddingLeft": 8,
        "paddingRight": 8,
        "paddingTop": 12,
      }
    }
  >
    <Text
      numberOfLines={1}
      style={
        Object {
          "color": "#000000",
          "flex": 1,
          "fontSize": 16,
          "fontWeight": "400",
        }
      }
    >
      Some text here
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 14,
            "fontWeight": "200",
          },
          undefined,
          undefined,
          undefined,
          undefined,
        ]
      }
    >
      One
    </Text>
  </View>,
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    supportedOrientations={
      Array [
        "portrait",
      ]
    }
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#d0d4da",
          "height": 215,
          "justifyContent": "center",
        }
      }
    >
      <View>
        <RNCPicker
          items={
            Array [
              Object {
                "label": "One",
                "testID": undefined,
                "textColor": undefined,
                "value": "one",
              },
              Object {
                "label": "Two",
                "testID": undefined,
                "textColor": undefined,
                "value": "two",
              },
            ]
          }
          onChange={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </Modal>,
]
`;
